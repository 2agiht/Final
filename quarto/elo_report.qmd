---
title: "Elo Rating"
format: html
editor: visual
execute:
  echo: false
---

```{r message = FALSE, warning = FALSE}
#libraries
library(dplyr)
library(lubridate)
library(DT)
library(plotly)
library(baseballr)
library(knitr)
library(readr)
library(tidyr)
```

Last updated: `r format(Sys.time(), "%m/%d/%Y %H:%M %Z")`

```{r}
#read_csv
df = read_csv("../data/elo_ratings.csv", show_col_types = FALSE)
# Safely check for structure
invalid_data = ncol(df) < 31 || nrow(df) < 2 || all(is.na(df$date))

if (invalid_data) {
  cat("## Waiting for game data — please come again later.\n")
  knit_exit()
}
```

```{r}
#reformatting csv for later plot
elo_data = df %>% 
  filter(!is.na(date)) %>% 
  mutate(date = ymd(date)) %>% 
  pivot_longer(
    cols = -date,
    names_to = "Team",
    values_to = "Elo"
  )

#get latest date. 
latest_date = max(elo_data$date)

#latest elo
elo_today <- df %>%
  filter(date == latest_date) %>%
  pivot_longer(-date, names_to = "Teams", values_to = "Elo_today")

#elo from one day ago
elo_1d <- df %>%
  filter(date == (latest_date - 1)) %>%
  pivot_longer(-date, names_to = "Teams", values_to = "Elo_1d")

#elo from 7 days ago
elo_7d <- df %>%
  filter(date == (latest_date - 7)) %>%
  pivot_longer(-date, names_to = "Teams", values_to = "Elo_7d")

#latest_elo = elo_data %>% 
#  group_by(Team) %>% 
#  filter(date == max(date)) %>% 
#  ungroup()
```

::: {style="margin-top: 40px;"}
Elo for All Teams
:::

```{r}
p = ggplot(elo_data, aes(x = date, y = Elo, color = Team)) +
  geom_line(alpha = 0.7) +
  theme_minimal() +
  theme(
    legend.position = "none"
  )
ggplotly(p)
```

```{r}
#in_df_format = as.data.frame(tail(df, 1)) %>% 
#  pivot_longer(cols = -date, names_to = "Teams", values_to = "Elo") %>% 
#  select(Teams, Elo) %>% 
#  arrange(desc(Elo))

in_df_format <- elo_today %>%
  left_join(elo_1d, by = "Teams") %>%
  left_join(elo_7d, by = "Teams") %>%
  mutate(
    ΔElo_1d  = round(Elo_today - Elo_1d, digits = 2),
    ΔElo_7d = round(Elo_today - Elo_7d, digits = 2)
  ) %>%
  # Optional: replace NA with 0 or a message
  mutate(
    ΔElo_1d  = ifelse(is.na(ΔElo_1d), 0, ΔElo_1d),
    ΔElo_7d = ifelse(is.na(ΔElo_7d), 0, ΔElo_7d)
  ) %>%
  select(Teams, Elo = Elo_today, ΔElo_1d , ΔElo_7d) %>%
  arrange(desc(Elo))

datatable(as.data.frame(in_df_format), options = list(pageLength = 10))
```
